name: Desplegar en VPS (Producción)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm
  
      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build
        env:
          VITE_ENVIRONMENT: 'production'
          VITE_ODOO_API_URL: 'https://phides-api.phicargo-sistemas.online'
          VITE_PHIDES_API_URL: 'https://phides.phicargo-sistemas.online/phicargo'
          VITE_WEBSOCKET_SERVER: 'wss://phides-api.phicargo-sistemas.online/ws/'
          VITE_SENTRY_DNS: ${{ secrets.SENTRY_DSN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: docker build -f Dockerfile.prod -t phicargo-react:latest .

      - name: Save Docker Image as tar file
        run: docker save phicargo-react:latest -o phicargo-react-image.tar

      - name: Copy Docker image to VPS
        uses: srueda99/scp-action@v12
        with:
          port: 22
          host: ${{ secrets.VPS_HOST }}
          origin: "./phicargo-react-image.tar"
          destination: "~/workspace/phicargo-react/phicargo-react-image.tar"
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}

      - name: Copy Docker Compose file to VPS
        uses: srueda99/scp-action@v12
        with:
          port: 22
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          origin: "./docker-compose.prod.yml"
          destination: "~/workspace/phicargo-react/docker-compose.prod.yml"
          key: ${{ secrets.VPS_PRIVATE_KEY }}

      - name: SSH to VPS and deploy
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            WORKDIR=~/workspace/phicargo-react

            echo "1️⃣ Comprobando permisos en $WORKDIR..."
            mkdir -p $WORKDIR || { echo "❌ No se puede crear el directorio"; exit 1; }
            touch $WORKDIR/test_perm || { echo "❌ No se pueden crear archivos"; exit 1; }
            rm $WORKDIR/test_perm
            echo "✅ Permisos OK"

            echo "2️⃣ Deteniendo contenedores existentes..."
            docker compose -f $WORKDIR/docker-compose.prod.yml down || echo "No había contenedores activos."

            EXISTING_CONTAINER=$(docker ps -aq -f name=phicargo-react)
            if [ -n "$EXISTING_CONTAINER" ]; then
              docker rm -f $EXISTING_CONTAINER
            fi

            EXISTING_IMAGE=$(docker images -q phicargo-react:latest)
            if [ -n "$EXISTING_IMAGE" ]; then
              docker rmi -f $EXISTING_IMAGE || echo "No se pudo eliminar la imagen antigua"
            fi

            echo "3️⃣ Cargando nueva imagen Docker..."
            docker load -i $WORKDIR/phicargo-react-image.tar || { echo "Fallo al cargar la imagen"; exit 1; }
            rm $WORKDIR/phicargo-react-image.tar

            echo "4️⃣ Levantando contenedores..."
            docker compose -f $WORKDIR/docker-compose.prod.yml up -d || { 
              echo "Fallo al levantar contenedores"; 
              docker compose -f $WORKDIR/docker-compose.prod.yml logs --no-color;
              exit 1; 
            }

            RUNNING=$(docker ps -q -f name=phicargo-react)
            if [ -z "$RUNNING" ]; then
              echo "❌ El contenedor no está corriendo. Revisar logs."
              docker compose -f $WORKDIR/docker-compose.prod.yml logs --no-color
              exit 1
            else
              echo "✅ Contenedor desplegado correctamente"
            fi
